===== Basic Bash =====


==== wget ====

Recursive download
<code>wget -r -l 1 --no-parent -nd <URL></code>
- recursive  <code>-r</code>
- only one level i.e. no subfolders
 <code>-l 1</code>
- Nothing above the level
<code>--no-parent</code> - 
- No directories, otherwise you get a structure like the web servers' 
<code>-nd</code> 

Recursive download by file name/type
<code>wget -r -l 1 --no-parent -nd -A <pattern> <URL></code>
Example
gets all .sh files
<code>wget -r -l 1 --no-parent -nd -A ".sh" <URL></code>

==== Telnet ====

Default port : 23
Very insecure, should never be enabled

=== connect to webserver ===
<code>telnet IP 80</code>
- get a file (index.html)  
    <code>GET /index.html HTTP/1.1</code> 
    <code>host: telnet</code> 

=== FTP ===
<code>telnet IP 21
    commands
    - <code>ls</code> list
    - switch to ascii mode
      - <code>ascii</code> 
    - <code>get</code>  - download a file to current folder
    - <code>exit</code>   

<code>ftp user@ip port</code> 

=== SMTP ===
<code>telnet IP 25</code>
    commands to send</code> 
        <code>helo telent <enter></code>
    set sender ???
        mail from:

=== pop3 ===
<code>telnet IP 110</code> 
    commands
    - login
        <code>user <username></code> 
        <code>pass <pwd></code> 
    - <code>stat</code> </code> 
    returns +OK nn mm
        ex +OK 1 0
        +OK - all is well
        nn - number of email msgs
        mm - size
    - <code>list - list msgs
    - <code> RETR <#> </code> 
        return msg #

=== imap ===
<code>telnet IP 143</code> 

=== ssh ===
<code>ssh username@host</code>


<code>
code blocks
</code> 



=== netstat ===


show all listening ports and established connections
netstat -a: 

TCP or UDP ports
<code>netstat -at</code>
<code>netstat -au</code>


list ports in listening mode (open and ready to accept incoming connections). 
<code>netstat -l</code>
 TCP Listening
 <code>netstat -lt</code>


connections by service name with PID information.
<code>netstat -tp</code>

TCP Listening
<code>netstat -tpl</code>



=== find ===
description
<code>
code blocks
</code> 

files with SUID set
<code>find / -perm -u=s -type f 2>/dev/null</code> 

SUID files
<code>find / -perm -4000 -type f 2>/dev/null</code> 

SUID files owned by root, anyone can execute
<code>find / -uid 0 -perm -4000 -type f 2>/dev/null</code>

Writeable folders
<code>find / -writable 2>/dev/null <code>
Can clean it up
<code>find / -writable 2>/dev/null | cut -d "/" -f 2</code>

file named “foo.bar” in the current directory
<code>find . -name foo.bar</code> 

file names “foo.bar” in the /home directory
<code>find /home -name foo.bar</code>

 find the directory named config under “/”
<code>find / -type d -name config</code>

files with 777 permissions
<code>find / -type f -perm 0777</code> 

executable files
<code>find / -perm a=x</code>

files for user “spam” under “/home”
<code>find /home -user spam</code> 


files that were modified in the last 10 days
<code>find / -mtime 10</code>

files changed within the last hour
<code>find / -cmin -60</code> 

files accesses within the last hour
<code>find / -amin -60</code> 
 
files that were accessed in the last 10 day
<code>find / -atime 10</code>

world-writeable folders
<code>find / -writable -type d 2>/dev/null</code>

world-executable folders
<code>find / -perm -o x -type d 2>/dev/null</code> 


=== paths ===

Add tmp to path
<code>export PATH=/tmp:$PATH</code>



=== nfs ===

Config is /etc/exports
<code>cat /etc/exports</code>

Look for "no_root_squash", can put an exe in a writable share
Find mount points
<code>showmount -e</code>
Want some no_squash

create a mount
<code>mkdir /tmp/spam</code>
<code>mount -o rw <IP>:/<no squash share> /tmp/spam</code>



{{tag>tag1, tag2, "tag 3"}